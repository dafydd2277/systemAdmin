# This isn't something I've had much chance to play with. I'm just dropping
# some notes for when I have a chance to actually try it out.

# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system-level_authentication_guide/configuring_domains

[domain/${s_domain_all_caps}]
debug_level = 1

id_provider = ad
krb5_store_password_if_offline = True
ad_server = ${s_server1_fqdn}, ${s_server2_fqdn}
use_fully_qualified_names = False
auth_provider = ad
chpass_provider = ad
access_provider = ad
ldap_sasl_mech = GSSAPI

# Defines user/group schema type
ldap_schema = ad

# Use explict POSIX attributes in the Windows entries.
dyndns_update = False
lookup_family_order = ipv4_only
ldap_id_mapping = True

# Caching credentials
cache_credentials = False

# Access controls
ldap_access_order = filter,expire
ldap_account_expire_policy = ad
ldap_force_upper_case_realm = True

# Filter string. According to
# https://sssd.io/docs/design_pages/active_directory_access_control.html
# this is an LDAP filter string as (barely) described in the
# ldapsearch man page and covered more extensively here:
# http://www.ldapexplorer.com/en/manual/109010000-ldap-filter-syntax.htm
# for complex examples.
ad_access_filter = (memberOf=CN=${s_ldap_group_canonical_name})

# Performance
ldap_referrals = False
enumerate = False
krb5_realm = ${s_domain_all_caps}
realmd_tags = manages-system joined-with-adcli
krb5_server = ${s_server1_fqdn},${s_server2_fqdn}
default_shell = /bin/bash
override_homedir = /home/%u

[sssd]
debug_level = 1
services = nss, pam
config_file_version = 2
domains = ${s_domain_all_caps}

[nss]
debug_level = 1
homedir_substring = /home

[pam]
debug_level = 1

[ssh]
debug_level = 1

[sudo]

[autofs]

[pac]
